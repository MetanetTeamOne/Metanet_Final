<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.metanet.finalproject.member.repository.IMemberRepository">
    <select id="getMember" resultType="com.metanet.finalproject.member.model.Member">
        select member_id as memberId, member_name as memberName, member_email as memberEmail,
               member_phone_number as memberPhoneNumber, member_password as memberPassword,
               member_join_date as memberJoinDate, member_join_state as memberJoinState,
               member_subscribe as memberSubscribe, member_subscribe_date as memberSubScribeDate,
               member_card as memberCard
        from member
        where member_id = #{memberId}
    </select>

    <select id="getMemberList" resultType="com.metanet.finalproject.member.model.Member">
        select member_id as memberId, member_name as memberName, member_email as memberEmail,
               member_phone_number as memberPhoneNumber, member_password as memberPassword,
               member_join_date as memberJoinDate, member_join_state as memberJoinState,
               member_subscribe as memberSubscribe, member_subscribe_date as memberSubScribeDate,
               member_card as memberCard
        from member
    </select>

    <insert id="insertMember">
        <selectKey keyProperty="memberId" resultType="int" order="BEFORE">
			select nvl(max(member_id), 0) + 1 from member
		</selectKey>
		insert into member(member_id, member_name, member_email, member_phone_number, member_password, member_join_date,
		member_join_state, member_subscribe, member_subscribe_date, member_card)
		values (#{memberId}, #{member.memberName}, #{member.memberEmail}, #{member.memberPhoneNumber},
		#{member.memberPassword}, sysdate, #{member.memberJoinState}, #{member.memberSubscribe},
		#{member.memberSubscribeDate}, #{member.memberCard})
    </insert>

    <update id="updateMember">
        update member
        <set>
			<if test="member.memberName != null">member_name = #{member.memberName},</if>
			<if test="member.memberPhoneNumber != null">member_phone_number = #{member.memberPhoneNumber},</if>
			<if test="member.newPassword != null">member_password = #{member.newPassword},</if>
		</set>
		where member_email = #{member.memberEmail}
    </update>

    <delete id="deleteMember">
        delete from member
        where member_password = #{password}
    </delete>

	<select id="getMemberId" resultType="int">
		select member_id
		from member
		where member_email = #{email}
	</select>
    
	<select id="selectMember" parameterType="string" resultType="com.metanet.finalproject.member.model.Member">
		select MEMBER_ID,
				MEMBER_NAME,
				MEMBER_EMAIL,
				MEMBER_PHONE_NUMBER,
				MEMBER_PASSWORD,
				MEMBER_JOIN_DATE,
				MEMBER_JOIN_STATE,
				MEMBER_SUBSCRIBE,
				MEMBER_SUBSCRIBE_DATE,
				MEMBER_CARD
		from member 
		<if test="memberEmail != null">
			where MEMBER_EMAIL=#{memberEmail}
		</if>
	</select>

	<!-- 구독신청) MEMBER_SUBSCRIBE : 1, MEMBER_SUBSCRIBE_DATE:sysdate로 update -->
<!-- 	<update id="insertSubscribe" parameterType="com.metanet.finalproject.member.model.Member">
			update member
			set MEMBER_SUBSCRIBE='1',
				MEMBER_SUBSCRIBE_DATE=sysdate
		<if test="memberEmail != null">
			where MEMBER_EMAIL=#{memberEmail};
		</if>
	</update> -->
	
	<!-- 구독해지) MEMBER_SUBSCRIBE : 0으로 update -->
	<update id="updateSubscribe" parameterType="com.metanet.finalproject.member.model.Member">
		update member
		set member_subscribe=#{memberSubscribe}
		where member_email=#{memberEmail}
	</update>
	
	<!-- 구독 상태 조회 -->
	<select id="selectSubscribe" parameterType="string" resultType="string">
		select MEMBER_SUBSCRIBE
		from member 
		<if test="memberEmail != null">
			where MEMBER_EMAIL=#{memberEmail}
		</if>
	</select>
	
	<!-- 카드등록) MEMBER_CARD : 1로 update -->
	<update id="insertCard" parameterType="string">
		update member
		set MEMBER_CARD='1'
		<if test="memberEmail != null">
			where MEMBER_EMAIL=#{memberEmail}
		</if>
	</update>
	
</mapper>